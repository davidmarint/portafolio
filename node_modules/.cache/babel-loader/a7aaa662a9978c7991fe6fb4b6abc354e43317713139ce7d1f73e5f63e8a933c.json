{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Documents\\\\portafolio\\\\src\\\\components\\\\ContactSection\\\\ContactForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport FormField from './FormField';\nimport SuccessMessage from './SuccessMessage';\nimport { useContactForm } from '../../hooks/useContactForms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const {\n    formData,\n    isSubmitted,\n    handleChange,\n    handleSubmit\n  } = useContactForm();\n  if (isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      message: \"\\xA1Mensaje enviado con \\xE9xito! Pronto me pondr\\xE9 en contacto contigo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      id: \"name\",\n      name: \"name\",\n      label: \"Nombre\",\n      value: formData.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      id: \"message\",\n      name: \"message\",\n      type: \"textarea\",\n      label: \"Mensaje\",\n      value: formData.message,\n      onChange: handleChange,\n      rows: 4,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full py-3 bg-red-800 text-white font-bold rounded-md hover:bg-red-600 transition-colors\",\n      children: \"Enviar Mensaje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"FqIiONXDqQI1aRr9Jtsa/JMibGI=\", false, function () {\n  return [useContactForm];\n});\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","FormField","SuccessMessage","useContactForm","jsxDEV","_jsxDEV","ContactForm","_s","formData","isSubmitted","handleChange","handleSubmit","message","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","children","id","name","label","value","onChange","required","type","email","rows","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Documents/portafolio/src/components/ContactSection/ContactForm.js"],"sourcesContent":["import React from 'react';\r\nimport FormField from './FormField';\r\nimport SuccessMessage from './SuccessMessage';\r\nimport { useContactForm } from '../../hooks/useContactForms';\r\n\r\nconst ContactForm = () => {\r\n  const { formData, isSubmitted, handleChange, handleSubmit } = useContactForm();\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <SuccessMessage message=\"¡Mensaje enviado con éxito! Pronto me pondré en contacto contigo.\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      <FormField\r\n        id=\"name\"\r\n        name=\"name\"\r\n        label=\"Nombre\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      \r\n      <FormField\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        label=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      \r\n      <FormField\r\n        id=\"message\"\r\n        name=\"message\"\r\n        type=\"textarea\"\r\n        label=\"Mensaje\"\r\n        value={formData.message}\r\n        onChange={handleChange}\r\n        rows={4}\r\n        required\r\n      />\r\n      \r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full py-3 bg-red-800 text-white font-bold rounded-md hover:bg-red-600 transition-colors\"\r\n      >\r\n        Enviar Mensaje\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGR,cAAc,CAAC,CAAC;EAE9E,IAAIM,WAAW,EAAE;IACf,oBACEJ,OAAA,CAACH,cAAc;MAACU,OAAO,EAAC;IAAmE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAElG;EAEA,oBACEX,OAAA;IAAMY,QAAQ,EAAEN,YAAa;IAACO,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACjDd,OAAA,CAACJ,SAAS;MACRmB,EAAE,EAAC,MAAM;MACTC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAC,QAAQ;MACdC,KAAK,EAAEf,QAAQ,CAACa,IAAK;MACrBG,QAAQ,EAAEd,YAAa;MACvBe,QAAQ;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFX,OAAA,CAACJ,SAAS;MACRmB,EAAE,EAAC,OAAO;MACVC,IAAI,EAAC,OAAO;MACZK,IAAI,EAAC,OAAO;MACZJ,KAAK,EAAC,OAAO;MACbC,KAAK,EAAEf,QAAQ,CAACmB,KAAM;MACtBH,QAAQ,EAAEd,YAAa;MACvBe,QAAQ;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFX,OAAA,CAACJ,SAAS;MACRmB,EAAE,EAAC,SAAS;MACZC,IAAI,EAAC,SAAS;MACdK,IAAI,EAAC,UAAU;MACfJ,KAAK,EAAC,SAAS;MACfC,KAAK,EAAEf,QAAQ,CAACI,OAAQ;MACxBY,QAAQ,EAAEd,YAAa;MACvBkB,IAAI,EAAE,CAAE;MACRH,QAAQ;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFX,OAAA;MACEqB,IAAI,EAAC,QAAQ;MACbR,SAAS,EAAC,2FAA2F;MAAAC,QAAA,EACtG;IAED;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACT,EAAA,CAjDID,WAAW;EAAA,QAC+CH,cAAc;AAAA;AAAA0B,EAAA,GADxEvB,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}