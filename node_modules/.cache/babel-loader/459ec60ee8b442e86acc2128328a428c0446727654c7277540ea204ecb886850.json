{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Documents\\\\portafolio\\\\src\\\\components\\\\Header\\\\Navigation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Logo from \"./Logo\";\nimport DesktopNavigation from \"./DesktopNavigation\";\nimport MobileMenuButton from \"./MobileButton\";\nimport MobileNavigation from \"./MobileNavigation\";\nimport { useNavigation } from \"../../hooks/useNavigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConditionalNavigation = ({\n  activeSection\n}) => {\n  _s();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const location = useLocation(); // Hook para obtener la ruta actual\n  const isHomePage = location.pathname === \"/\";\n  const {\n    handleNavClick,\n    goToHome,\n    getLinkClasses\n  } = useNavigation({\n    isHomePage,\n    activeSection,\n    isMenuOpen,\n    setIsMenuOpen\n  });\n\n  // Cerrar menú móvil al redimensionar\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 768 && isMenuOpen) {\n        setIsMenuOpen(false);\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [isMenuOpen]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"fixed w-full bg-black bg-opacity-90 backdrop-blur-sm z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between h-16\",\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          onClick: goToHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DesktopNavigation, {\n          handleNavClick: handleNavClick,\n          getLinkClasses: getLinkClasses,\n          isHomePage: isHomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MobileMenuButton, {\n          isMenuOpen: isMenuOpen,\n          setIsMenuOpen: setIsMenuOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileNavigation, {\n      isMenuOpen: isMenuOpen,\n      handleNavClick: handleNavClick,\n      getLinkClasses: getLinkClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ConditionalNavigation, \"GIdOjXQei0/At1uLzw13ycEDKes=\", false, function () {\n  return [useLocation, useNavigation];\n});\n_c = ConditionalNavigation;\nexport default ConditionalNavigation;\nvar _c;\n$RefreshReg$(_c, \"ConditionalNavigation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Logo","DesktopNavigation","MobileMenuButton","MobileNavigation","useNavigation","jsxDEV","_jsxDEV","ConditionalNavigation","activeSection","_s","isMenuOpen","setIsMenuOpen","location","isHomePage","pathname","handleNavClick","goToHome","getLinkClasses","handleResize","window","innerWidth","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Documents/portafolio/src/components/Header/Navigation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Logo from \"./Logo\";\r\nimport DesktopNavigation from \"./DesktopNavigation\";\r\nimport MobileMenuButton from \"./MobileButton\";\r\nimport MobileNavigation from \"./MobileNavigation\";\r\nimport { useNavigation } from \"../../hooks/useNavigation\";\r\n\r\nconst ConditionalNavigation = ({ activeSection }) => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const location = useLocation(); // Hook para obtener la ruta actual\r\n  const isHomePage = location.pathname === \"/\";\r\n\r\n  const { handleNavClick, goToHome, getLinkClasses } = useNavigation({\r\n    isHomePage,\r\n    activeSection,\r\n    isMenuOpen,\r\n    setIsMenuOpen,\r\n  });\r\n\r\n  // Cerrar menú móvil al redimensionar\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth >= 768 && isMenuOpen) {\r\n        setIsMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [isMenuOpen]);\r\n\r\n  return (\r\n    <nav className=\"fixed w-full bg-black bg-opacity-90 backdrop-blur-sm z-50\">\r\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          <Logo onClick={goToHome} />\r\n\r\n          {/* Navegación desktop */}\r\n          <DesktopNavigation\r\n            handleNavClick={handleNavClick}\r\n            getLinkClasses={getLinkClasses}\r\n            isHomePage={isHomePage}\r\n          />\r\n\r\n          {/* Botón menú móvil */}\r\n          <MobileMenuButton\r\n            isMenuOpen={isMenuOpen}\r\n            setIsMenuOpen={setIsMenuOpen}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Menú móvil */}\r\n      <MobileNavigation\r\n        isMenuOpen={isMenuOpen}\r\n        handleNavClick={handleNavClick}\r\n        getLinkClasses={getLinkClasses}\r\n      />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default ConditionalNavigation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,gBAAgB,MAAM,gBAAgB;AAC7C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMe,UAAU,GAAGD,QAAQ,CAACE,QAAQ,KAAK,GAAG;EAE5C,MAAM;IAAEC,cAAc;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAGb,aAAa,CAAC;IACjES,UAAU;IACVL,aAAa;IACbE,UAAU;IACVC;EACF,CAAC,CAAC;;EAEF;EACAd,SAAS,CAAC,MAAM;IACd,MAAMqB,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,IAAIV,UAAU,EAAE;QAC1CC,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC;IAEDQ,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACjE,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,2DAA2D;IAAAC,QAAA,gBACxElB,OAAA;MAAKiB,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACrDlB,OAAA;QAAKiB,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDlB,OAAA,CAACN,IAAI;UAACyB,OAAO,EAAET;QAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAG3BvB,OAAA,CAACL,iBAAiB;UAChBc,cAAc,EAAEA,cAAe;UAC/BE,cAAc,EAAEA,cAAe;UAC/BJ,UAAU,EAAEA;QAAW;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eAGFvB,OAAA,CAACJ,gBAAgB;UACfQ,UAAU,EAAEA,UAAW;UACvBC,aAAa,EAAEA;QAAc;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNvB,OAAA,CAACH,gBAAgB;MACfO,UAAU,EAAEA,UAAW;MACvBK,cAAc,EAAEA,cAAe;MAC/BE,cAAc,EAAEA;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CArDIF,qBAAqB;EAAA,QAERT,WAAW,EAGyBM,aAAa;AAAA;AAAA0B,EAAA,GAL9DvB,qBAAqB;AAuD3B,eAAeA,qBAAqB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}