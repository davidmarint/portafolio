{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Documents\\\\portafolio\\\\src\\\\components\\\\Navigation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConditionalNavigation = ({\n  activeSection\n}) => {\n  _s();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const location = useLocation(); // Hook para obtener la ruta actual\n  const navigate = useNavigate(); // Hook para navegar programáticamente\n\n  // CONDICIÓN PRINCIPAL: ¿Estamos en la página principal?\n  const isHomePage = location.pathname === '/';\n  console.log('Página actual:', location.pathname);\n  console.log('¿Es página principal?', isHomePage);\n\n  // Función inteligente que decide qué hacer según la página\n  const handleNavClick = (e, targetId) => {\n    e.preventDefault();\n\n    // Cerrar menú móvil si está abierto\n    if (isMenuOpen) {\n      setIsMenuOpen(false);\n    }\n\n    // AQUÍ ESTÁ LA LÓGICA CONDICIONAL:\n    if (isHomePage) {\n      // CASO 1: Estamos en la página principal (/)\n      // → Hacer scroll suave a la sección\n      console.log('Estamos en home, haciendo scroll a:', targetId);\n      const targetElement = document.getElementById(targetId);\n      if (targetElement) {\n        window.scrollTo({\n          top: targetElement.offsetTop - 64,\n          behavior: 'smooth'\n        });\n      } else {\n        console.warn(`Sección \"${targetId}\" no encontrada en la página`);\n      }\n    } else {\n      // CASO 2: Estamos en otra página (/proyecto/1, /about, etc.)\n      // → Navegar al home Y luego hacer scroll\n      console.log('Estamos en otra página, navegando a home y luego a:', targetId);\n\n      // Opción A: Navegar y esperar a que cargue la página\n      navigate('/');\n\n      // Usar setTimeout para esperar que la página se renderice\n      setTimeout(() => {\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          window.scrollTo({\n            top: targetElement.offsetTop - 64,\n            behavior: 'smooth'\n          });\n        }\n      }, 100); // Esperar 100ms para que el DOM se actualice\n\n      // Opción B (alternativa): Usar el hash en la URL\n      // navigate(`/#${targetId}`);\n    }\n  };\n\n  // Función para ir directamente al home (sin sección específica)\n  const goToHome = () => {\n    if (isHomePage) {\n      // Ya estamos en home, ir al inicio de la página\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else {\n      // Navegar al home\n      navigate('/');\n    }\n  };\n\n  // Cerrar menú móvil al redimensionar\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 768 && isMenuOpen) {\n        setIsMenuOpen(false);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isMenuOpen]);\n\n  // Helper para las clases CSS (igual que antes)\n  const getLinkClasses = section => {\n    const baseDesktopClasses = \"px-3 py-2 rounded-md text-sm font-medium transition-colors\";\n    const baseMobileClasses = \"block px-3 py-2 rounded-md text-base font-medium\";\n\n    // Solo mostrar como \"activo\" si estamos en home Y es la sección correcta\n    const isActive = isHomePage && activeSection === section;\n    const desktopClasses = isActive ? `text-red-600 ${baseDesktopClasses}` : `text-white hover:text-red-600 ${baseDesktopClasses}`;\n    const mobileClasses = isActive ? `text-red-600 bg-gray-700 ${baseMobileClasses}` : `text-white hover:bg-gray-700 ${baseMobileClasses}`;\n    return {\n      desktop: desktopClasses,\n      mobile: mobileClasses\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"fixed w-full bg-black bg-opacity-90 backdrop-blur-sm z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between h-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goToHome,\n            className: \"text-white font-bold text-xl hover:text-red-600 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-600\",\n              children: \"David \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), \"Marin\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden md:block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-10 flex items-baseline space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleNavClick(e, 'home'),\n              className: getLinkClasses('home').desktop,\n              title: isHomePage ? 'Ir al inicio de la página' : 'Ir al home',\n              children: \"Inicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleNavClick(e, 'skills'),\n              className: getLinkClasses('skills').desktop,\n              title: isHomePage ? 'Ir a Habilidades' : 'Ir al home → Habilidades',\n              children: \"Habilidades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleNavClick(e, 'projects'),\n              className: getLinkClasses('projects').desktop,\n              title: isHomePage ? 'Ir a Proyectos' : 'Ir al home → Proyectos',\n              children: \"Proyectos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleNavClick(e, 'contact'),\n              className: getLinkClasses('contact').desktop,\n              title: isHomePage ? 'Ir a Contacto' : 'Ir al home → Contacto',\n              children: \"Contacto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"-mr-2 flex md:hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            className: \"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white focus:outline-none\",\n            \"aria-expanded\": isMenuOpen,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: isMenuOpen ? 'Cerrar menú' : 'Abrir menú'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-6 w-6\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: isMenuOpen ? /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 6h16M4 12h16M4 18h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:hidden bg-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-2 pt-2 pb-3 space-y-1 sm:px-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleNavClick(e, 'home'),\n          className: `${getLinkClasses('home').mobile} w-full text-left`,\n          children: \"Inicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleNavClick(e, 'skills'),\n          className: `${getLinkClasses('skills').mobile} w-full text-left`,\n          children: \"Habilidades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleNavClick(e, 'projects'),\n          className: `${getLinkClasses('projects').mobile} w-full text-left`,\n          children: \"Proyectos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleNavClick(e, 'contact'),\n          className: `${getLinkClasses('contact').mobile} w-full text-left`,\n          children: \"Contacto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ConditionalNavigation, \"Lovl82CiS4IQvq7Rzg1yG4CqTQk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ConditionalNavigation;\nexport default ConditionalNavigation;\nvar _c;\n$RefreshReg$(_c, \"ConditionalNavigation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","ConditionalNavigation","activeSection","_s","isMenuOpen","setIsMenuOpen","location","navigate","isHomePage","pathname","console","log","handleNavClick","e","targetId","preventDefault","targetElement","document","getElementById","window","scrollTo","top","offsetTop","behavior","warn","setTimeout","goToHome","handleResize","innerWidth","addEventListener","removeEventListener","getLinkClasses","section","baseDesktopClasses","baseMobileClasses","isActive","desktopClasses","mobileClasses","desktop","mobile","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Documents/portafolio/src/components/Navigation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst ConditionalNavigation = ({ activeSection }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const location = useLocation(); // Hook para obtener la ruta actual\n  const navigate = useNavigate(); // Hook para navegar programáticamente\n  \n  // CONDICIÓN PRINCIPAL: ¿Estamos en la página principal?\n  const isHomePage = location.pathname === '/';\n  \n  console.log('Página actual:', location.pathname);\n  console.log('¿Es página principal?', isHomePage);\n\n  // Función inteligente que decide qué hacer según la página\n  const handleNavClick = (e, targetId) => {\n    e.preventDefault();\n    \n    // Cerrar menú móvil si está abierto\n    if (isMenuOpen) {\n      setIsMenuOpen(false);\n    }\n    \n    // AQUÍ ESTÁ LA LÓGICA CONDICIONAL:\n    if (isHomePage) {\n      // CASO 1: Estamos en la página principal (/)\n      // → Hacer scroll suave a la sección\n      console.log('Estamos en home, haciendo scroll a:', targetId);\n      \n      const targetElement = document.getElementById(targetId);\n      if (targetElement) {\n        window.scrollTo({\n          top: targetElement.offsetTop - 64,\n          behavior: 'smooth'\n        });\n      } else {\n        console.warn(`Sección \"${targetId}\" no encontrada en la página`);\n      }\n      \n    } else {\n      // CASO 2: Estamos en otra página (/proyecto/1, /about, etc.)\n      // → Navegar al home Y luego hacer scroll\n      console.log('Estamos en otra página, navegando a home y luego a:', targetId);\n      \n      // Opción A: Navegar y esperar a que cargue la página\n      navigate('/');\n      \n      // Usar setTimeout para esperar que la página se renderice\n      setTimeout(() => {\n        const targetElement = document.getElementById(targetId);\n        if (targetElement) {\n          window.scrollTo({\n            top: targetElement.offsetTop - 64,\n            behavior: 'smooth'\n          });\n        }\n      }, 100); // Esperar 100ms para que el DOM se actualice\n      \n      // Opción B (alternativa): Usar el hash en la URL\n      // navigate(`/#${targetId}`);\n    }\n  };\n\n  // Función para ir directamente al home (sin sección específica)\n  const goToHome = () => {\n    if (isHomePage) {\n      // Ya estamos en home, ir al inicio de la página\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else {\n      // Navegar al home\n      navigate('/');\n    }\n  };\n\n  // Cerrar menú móvil al redimensionar\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 768 && isMenuOpen) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isMenuOpen]);\n\n  // Helper para las clases CSS (igual que antes)\n  const getLinkClasses = (section) => {\n    const baseDesktopClasses = \"px-3 py-2 rounded-md text-sm font-medium transition-colors\";\n    const baseMobileClasses = \"block px-3 py-2 rounded-md text-base font-medium\";\n    \n    // Solo mostrar como \"activo\" si estamos en home Y es la sección correcta\n    const isActive = isHomePage && activeSection === section;\n    \n    const desktopClasses = isActive\n      ? `text-red-600 ${baseDesktopClasses}`\n      : `text-white hover:text-red-600 ${baseDesktopClasses}`;\n    \n    const mobileClasses = isActive\n      ? `text-red-600 bg-gray-700 ${baseMobileClasses}`\n      : `text-white hover:bg-gray-700 ${baseMobileClasses}`;\n    \n    return {\n      desktop: desktopClasses,\n      mobile: mobileClasses\n    };\n  };\n\n  return (\n    <nav className=\"fixed w-full bg-black bg-opacity-90 backdrop-blur-sm z-50\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          \n          {/* Logo - comportamiento condicional */}\n          <div className=\"flex items-center\">\n            <button \n              onClick={goToHome}\n              className=\"text-white font-bold text-xl hover:text-red-600 transition-colors\"\n            >\n              <span className=\"text-red-600\">David </span>Marin\n            </button>\n          </div>\n          \n          \n          {/* Navegación desktop */}\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-4\">\n              <button \n                onClick={(e) => handleNavClick(e, 'home')}\n                className={getLinkClasses('home').desktop}\n                title={isHomePage ? 'Ir al inicio de la página' : 'Ir al home'}\n              >\n                Inicio\n              </button>\n              \n              <button \n                onClick={(e) => handleNavClick(e, 'skills')}\n                className={getLinkClasses('skills').desktop}\n                title={isHomePage ? 'Ir a Habilidades' : 'Ir al home → Habilidades'}\n              >\n                Habilidades\n              </button>\n              \n              <button \n                onClick={(e) => handleNavClick(e, 'projects')}\n                className={getLinkClasses('projects').desktop}\n                title={isHomePage ? 'Ir a Proyectos' : 'Ir al home → Proyectos'}\n              >\n                Proyectos \n              </button>\n              \n              <button \n                onClick={(e) => handleNavClick(e, 'contact')}\n                className={getLinkClasses('contact').desktop}\n                title={isHomePage ? 'Ir a Contacto' : 'Ir al home → Contacto'}\n              >\n                Contacto\n              </button>\n            </div>\n          </div>\n          \n          {/* Botón menú móvil */}\n          <div className=\"-mr-2 flex md:hidden\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white focus:outline-none\"\n              aria-expanded={isMenuOpen}\n            >\n              <span className=\"sr-only\">{isMenuOpen ? 'Cerrar menú' : 'Abrir menú'}</span>\n              <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                {isMenuOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Menú móvil */}\n      {isMenuOpen && (\n        <div className=\"md:hidden bg-gray-800\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n            <button \n              onClick={(e) => handleNavClick(e, 'home')}\n              className={`${getLinkClasses('home').mobile} w-full text-left`}\n            >\n              Inicio\n            </button>\n            \n            <button \n              onClick={(e) => handleNavClick(e, 'skills')}\n              className={`${getLinkClasses('skills').mobile} w-full text-left`}\n            >\n              Habilidades \n            </button>\n            \n            <button \n              onClick={(e) => handleNavClick(e, 'projects')}\n              className={`${getLinkClasses('projects').mobile} w-full text-left`}\n            >\n              Proyectos\n            </button>\n            \n            <button \n              onClick={(e) => handleNavClick(e, 'contact')}\n              className={`${getLinkClasses('contact').mobile} w-full text-left`}\n            >\n              Contacto\n            </button>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default ConditionalNavigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}